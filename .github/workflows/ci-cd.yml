name: CI-CD Pipeline

on:
  push:
    branches: [main]

env:
  AWS_REGION: eu-west-2
  EKS_CLUSTER_NAME: ml-cluster
  IMAGE_NAME: ml-serving
  IMAGE_TAG: latest

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r serving/requirements.txt

      - name: Run tests
        run: |
          pytest tests/

  build-and-deploy:
    name: Build and Deploy to EKS
    needs: test
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::<your-account-id>:role/<GitHub-Role>
          role-session-name: github-actions
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          IMAGE_URI=$ECR_REGISTRY/${{ env.IMAGE_NAME }}:$IMAGE_TAG
          docker build -t $IMAGE_URI ./serving
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Update Kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

      - name: Deploy to EKS
        run: |
          kubectl set image deployment/ml-serving ml-serving=$IMAGE_URI -n default || \
          kubectl apply -f k8s/
